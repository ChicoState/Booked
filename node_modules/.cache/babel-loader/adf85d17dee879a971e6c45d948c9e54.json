{"ast":null,"code":"var _jsxFileName = \"/home/daniel/booked/Booked/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; // import firebase from 'firebase/app';\n// import 'firebase/firestore';\n// import 'firebase/auth'\n\nimport * as firebase from 'firebase';\nimport 'firebase/auth';\nimport DemoApp from './DemoApp';\nimport './main.css';\nvar config = {\n  apiKey: \"AIzaSyAbrPremBQusjYoKqKfTcVHwxuw-Q8ikHw\",\n  authDomain: \"booked-8586e.firebaseapp.com\",\n  databaseURL: \"https://booked-8586e.firebaseio.com\",\n  projectId: \"booked-8586e\",\n  storageBucket: \"booked-8586e.appspot.com\",\n  messagingSenderId: \"24720035765\",\n  appId: \"1:24720035765:web:3d57fd5c840b8100c353fc\",\n  measurementId: \"G-20QKEY7V1D\"\n};\nfirebase.initializeApp(config);\nvar provider = new firebase.auth.GoogleAuthProvider(); //var user = firebase.auth().currentUser;\n\nvar name, email;\nfirebase.auth().useDeviceLanguage();\nfirebase.auth().onAuthStateChanged(function (user) {\n  if (user != null) {\n    name = user.displayName;\n    email = user.email;\n    alert(name + ': ' + email);\n  } else {\n    alert('Working on Redirect for initial log in');\n    firebase.auth.signinWithRedirect(provider);\n    firebase.auth().getRedirectResult().then(function (result) {\n      if (result.credential) {//This gives you a Google Access Token.\n        //var token = result.credential.accessToken;\n      }\n\n      user = result.user;\n    }).catch(function (error) {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message; // The email of the user's account used.\n\n      var errorEmail = error.email; // The firebase.auth.AuthCredential type that was used.\n\n      var credential = error.credential; //Output line for error variables to silence unused var warnings\n\n      alert(errorCode + errorMessage + errorEmail + credential);\n    });\n  }\n});\n\nclass TodoApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      text: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const itemsRef = firebase.database().ref('text');\n    itemsRef.on('value', snapshot => {\n      let items = snapshot.val();\n      let newState = [];\n\n      for (let item in items) {\n        newState.push({\n          id: items[item].id,\n          text: items[item].text\n        });\n      }\n\n      this.setState({\n        items: newState\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, \"TODO\"), /*#__PURE__*/React.createElement(TodoList, {\n      items: this.state.items,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"new-todo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, \"What needs to be done?\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"new-todo\",\n      onChange: this.handleChange,\n      value: this.state.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, \"Add #\", this.state.items.length + 1)), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: gotoCalendar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, \"View Calendar\"));\n  }\n\n  handleChange(e) {\n    this.setState({\n      text: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (this.state.text.length === 0) {\n      return;\n    }\n\n    const itemsRef = firebase.database().ref('text');\n    const newItem = {\n      text: this.state.text,\n      id: Date.now()\n    };\n    itemsRef.push(newItem); //    this.setState(state => ({\n    //      items: state.items.concat(newItem),\n    //      text: ''\n    //    }));\n  }\n\n}\n\nclass TodoList extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }\n    }, this.props.items.map(item => /*#__PURE__*/React.createElement(\"li\", {\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, item.text)));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(TodoApp, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 3\n  }\n}), document.getElementById('root'));\n\nfunction gotoCalendar() {\n  setTimeout(() => {\n    ReactDOM.render( /*#__PURE__*/React.createElement(DemoApp, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 3\n      }\n    }), //document.body.appendChild(document.createElement('root'))\n    document.getElementById('root'));\n  }, 1000);\n}","map":{"version":3,"sources":["/home/daniel/booked/Booked/src/index.js"],"names":["React","ReactDOM","firebase","DemoApp","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","provider","auth","GoogleAuthProvider","name","email","useDeviceLanguage","onAuthStateChanged","user","displayName","alert","signinWithRedirect","getRedirectResult","then","result","credential","catch","error","errorCode","code","errorMessage","message","errorEmail","TodoApp","Component","constructor","props","state","items","text","handleChange","bind","handleSubmit","componentDidMount","itemsRef","database","ref","on","snapshot","val","newState","item","push","id","setState","render","length","gotoCalendar","e","target","value","preventDefault","newItem","Date","now","TodoList","map","document","getElementById","setTimeout"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n// import firebase from 'firebase/app';\n// import 'firebase/firestore';\n// import 'firebase/auth'\n\nimport * as firebase from 'firebase';\nimport 'firebase/auth';\n\nimport DemoApp from './DemoApp'\nimport './main.css'\n\nvar config = {\n  apiKey: \"AIzaSyAbrPremBQusjYoKqKfTcVHwxuw-Q8ikHw\",\n  authDomain: \"booked-8586e.firebaseapp.com\",\n  databaseURL: \"https://booked-8586e.firebaseio.com\",\n  projectId: \"booked-8586e\",\n  storageBucket: \"booked-8586e.appspot.com\",\n  messagingSenderId: \"24720035765\",\n  appId: \"1:24720035765:web:3d57fd5c840b8100c353fc\",\n  measurementId: \"G-20QKEY7V1D\"\n};\n\nfirebase.initializeApp(config);\n\nvar provider = new firebase.auth.GoogleAuthProvider();\n//var user = firebase.auth().currentUser;\nvar name, email;\n\n\nfirebase.auth().useDeviceLanguage();\nfirebase.auth().onAuthStateChanged(function(user){\n\n\tif(user != null){\n\t\tname = user.displayName;\n\t\temail = user.email;\n\t\talert(name + ': ' + email);\n\t}\n\telse{\n\t\talert('Working on Redirect for initial log in');\n\t\tfirebase.auth.signinWithRedirect(provider);\n\t\tfirebase.auth().getRedirectResult().then(function(result) {\n\t\t\tif (result.credential) {\n\t\t\t\t//This gives you a Google Access Token.\n\t\t\t\t//var token = result.credential.accessToken;\n\t\t\t}\n\t\t\tuser = result.user;\n\t\t}).catch(function(error) {\n\t\t\t\t// Handle Errors here.\n\t\t\t\tvar errorCode = error.code;\n\t\t\t\tvar errorMessage = error.message;\n\t\t\t\t// The email of the user's account used.\n\t\t\t\tvar errorEmail = error.email;\n\t\t\t\t// The firebase.auth.AuthCredential type that was used.\n\t\t\t\tvar credential = error.credential;\n\n\t\t\t\t//Output line for error variables to silence unused var warnings\n\t\t\t\talert(errorCode + errorMessage + errorEmail + credential);\n\t\t});\n\t}\n});\n\nclass TodoApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { items: [], text: '' };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const itemsRef = firebase.database().ref('text');\n    itemsRef.on('value', (snapshot) => {\n      let items = snapshot.val();\n      let newState = [];\n      for (let item in items) {\n        newState.push({\n          id: items[item].id,\n          text: items[item].text,\n        });\n      }\n      this.setState({\n        items: newState\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>TODO</h3>\n        <TodoList items={this.state.items} />\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"new-todo\">\n            What needs to be done?\n          </label>\n          <input\n            id=\"new-todo\"\n            onChange={this.handleChange}\n            value={this.state.text}\n          />\n          <button>\n            Add #{this.state.items.length + 1}\n          </button>\n        </form>\n        <button\n        onClick={gotoCalendar}\n        >View Calendar</button>\n      </div>\n\n    );\n  }\n\n  handleChange(e) {\n    this.setState({ text: e.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.text.length === 0) {\n      return;\n    }\n    const itemsRef = firebase.database().ref('text');\n    const newItem = {\n      text: this.state.text,\n      id: Date.now()\n    };\n    itemsRef.push(newItem);\n//    this.setState(state => ({\n//      items: state.items.concat(newItem),\n//      text: ''\n//    }));\n\n\n\n  }\n}\n\nclass TodoList extends React.Component {\n  render() {\n    return (\n      <ul>\n        {this.props.items.map(item => (\n          <li key={item.id}>{item.text}</li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nReactDOM.render(\n  <TodoApp />,\n  document.getElementById('root')\n);\n\nfunction gotoCalendar(){\nsetTimeout(() => {  ReactDOM.render(\n  <DemoApp />,\n  //document.body.appendChild(document.createElement('root'))\n  document.getElementById('root')\n); }, 1000);\n}\n"]},"metadata":{},"sourceType":"module"}