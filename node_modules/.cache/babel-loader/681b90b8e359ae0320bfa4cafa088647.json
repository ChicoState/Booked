{"ast":null,"code":"var _jsxFileName = \"/home/daniel/booked/Booked/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; // import firebase from 'firebase/app';\n// import 'firebase/firestore';\n// import 'firebase/auth'\n\nimport * as firebase from 'firebase';\nvar config = {\n  apiKey: \"AIzaSyAbrPremBQusjYoKqKfTcVHwxuw-Q8ikHw\",\n  authDomain: \"booked-8586e.firebaseapp.com\",\n  databaseURL: \"https://booked-8586e.firebaseio.com\",\n  projectId: \"booked-8586e\",\n  storageBucket: \"booked-8586e.appspot.com\",\n  messagingSenderId: \"24720035765\",\n  appId: \"1:24720035765:web:3d57fd5c840b8100c353fc\",\n  measurementId: \"G-20QKEY7V1D\"\n};\nfirebase.initializeApp(config);\n\nclass TodoApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      text: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const rootRef = firebase.database().ref(); //.child('react')\n\n    const itemsRef = rootRef.child('items');\n    itemsRef.on('value', snap => {\n      this.setState({\n        text: snap.val()\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, \"TODO\"), /*#__PURE__*/React.createElement(TodoList, {\n      items: this.state.items,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"new-todo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, \"What needs to be done?\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"new-todo\",\n      onChange: this.handleChange,\n      value: this.state.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, \"Add #\", this.state.items.length + 1)));\n  }\n\n  handleChange(e) {\n    this.setState({\n      text: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (this.state.text.length === 0) {\n      return;\n    }\n\n    const newItem = {\n      text: this.state.text,\n      id: Date.now()\n    };\n    this.setState(state => ({\n      items: state.items.concat(newItem),\n      text: ''\n    }));\n  }\n\n}\n\nclass TodoList extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, this.props.items.map(item => /*#__PURE__*/React.createElement(\"li\", {\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, item.text)));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(TodoApp, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 3\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/home/daniel/booked/Booked/src/index.js"],"names":["React","ReactDOM","firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","TodoApp","Component","constructor","props","state","items","text","handleChange","bind","handleSubmit","componentDidMount","rootRef","database","ref","itemsRef","child","on","snap","setState","val","render","length","e","target","value","preventDefault","newItem","id","Date","now","concat","TodoList","map","item","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n// import firebase from 'firebase/app';\n// import 'firebase/firestore';\n// import 'firebase/auth'\nimport * as firebase from 'firebase';\n\nvar config = {\n  apiKey: \"AIzaSyAbrPremBQusjYoKqKfTcVHwxuw-Q8ikHw\",\n  authDomain: \"booked-8586e.firebaseapp.com\",\n  databaseURL: \"https://booked-8586e.firebaseio.com\",\n  projectId: \"booked-8586e\",\n  storageBucket: \"booked-8586e.appspot.com\",\n  messagingSenderId: \"24720035765\",\n  appId: \"1:24720035765:web:3d57fd5c840b8100c353fc\",\n  measurementId: \"G-20QKEY7V1D\"\n};\nfirebase.initializeApp(config);\n\nclass TodoApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { items: [], text: '' };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount(){\n    const rootRef = firebase.database().ref(); //.child('react')\n    const itemsRef = rootRef.child('items');\n    itemsRef.on('value', snap=> {\n      this.setState({\n        text: snap.val()\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>TODO</h3>\n        <TodoList items={this.state.items} />\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"new-todo\">\n            What needs to be done?\n          </label>\n          <input\n            id=\"new-todo\"\n            onChange={this.handleChange}\n            value={this.state.text}\n          />\n          <button>\n            Add #{this.state.items.length + 1}\n          </button>\n        </form>\n      </div>\n    );\n  }\n\n  handleChange(e) {\n    this.setState({ text: e.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.text.length === 0) {\n      return;\n    }\n    const newItem = {\n      text: this.state.text,\n      id: Date.now()\n    };\n    this.setState(state => ({\n      items: state.items.concat(newItem),\n      text: ''\n    }));\n  }\n}\n\nclass TodoList extends React.Component {\n  render() {\n    return (\n      <ul>\n        {this.props.items.map(item => (\n          <li key={item.id}>{item.text}</li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nReactDOM.render(\n  <TodoApp />,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}