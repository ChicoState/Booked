{"ast":null,"code":"var _jsxFileName = \"/home/daniel/booked/Booked/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; // import firebase from 'firebase/app';\n// import 'firebase/firestore';\n// import 'firebase/auth'\n\nimport * as firebase from 'firebase';\nimport 'firebase/auth';\nimport DemoApp from './DemoApp';\nimport './main.css'; //start router code////////\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nexport default function BasicExample() {\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, \"Home\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/calender\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"Calender\"))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TodoApp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/calender\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DemoApp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  })))));\n} //test to see if we can put before initial databse\n// function Home() {\n//   return (\n//     <div>\n//       <h2>Home test</h2>\n//     </div>\n//   );\n// }\n\nfunction Calender() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, \"Calender test\"));\n} ///////////end router test//////////////////\n\n\nvar config = {\n  apiKey: \"AIzaSyAbrPremBQusjYoKqKfTcVHwxuw-Q8ikHw\",\n  authDomain: \"booked-8586e.firebaseapp.com\",\n  databaseURL: \"https://booked-8586e.firebaseio.com\",\n  projectId: \"booked-8586e\",\n  storageBucket: \"booked-8586e.appspot.com\",\n  messagingSenderId: \"24720035765\",\n  appId: \"1:24720035765:web:3d57fd5c840b8100c353fc\",\n  measurementId: \"G-20QKEY7V1D\"\n};\nfirebase.initializeApp(config); // var provider = new firebase.auth.GoogleAuthProvider();\n// //var user = firebase.auth().currentUser;\n// var name, email;\n//\n//\n// firebase.auth().useDeviceLanguage();\n// firebase.auth().onAuthStateChanged(function(user){\n//\n// \tif(user != null){\n// \t\tname = user.displayName;\n// \t\temail = user.email;\n// \t\talert(name + ': ' + email);\n// \t}\n// \telse{\n// \t\talert('Working on Redirect for initial log in');\n// \t\tfirebase.auth.signinWithRedirect(provider);\n// \t\tfirebase.auth().getRedirectResult().then(function(result) {\n// \t\t\tif (result.credential) {\n// \t\t\t\t//This gives you a Google Access Token.\n// \t\t\t\t//var token = result.credential.accessToken;\n// \t\t\t}\n// \t\t\tuser = result.user;\n// \t\t}).catch(function(error) {\n// \t\t\t\t// Handle Errors here.\n// \t\t\t\tvar errorCode = error.code;\n// \t\t\t\tvar errorMessage = error.message;\n// \t\t\t\t// The email of the user's account used.\n// \t\t\t\tvar errorEmail = error.email;\n// \t\t\t\t// The firebase.auth.AuthCredential type that was used.\n// \t\t\t\tvar credential = error.credential;\n//\n// \t\t\t\t//Output line for error variables to silence unused var warnings\n// \t\t\t\talert(errorCode + errorMessage + errorEmail + credential);\n// \t\t});\n// \t}\n// });\n// class TodoApp extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { items: [], text: '' };\n//     this.handleChange = this.handleChange.bind(this);\n//     this.handleSubmit = this.handleSubmit.bind(this);\n//   }\n//\n//   componentDidMount() {\n//     const itemsRef = firebase.database().ref('text');\n//     itemsRef.on('value', (snapshot) => {\n//       let items = snapshot.val();\n//       let newState = [];\n//       for (let item in items) {\n//         newState.push({\n//           id: items[item].id,\n//           text: items[item].text,\n//         });\n//       }\n//       this.setState({\n//         items: newState\n//       });\n//     });\n//   }\n//\n//   render() {\n//     return (\n//       <div>\n//         <h3>TODO</h3>\n//         <TodoList items={this.state.items} />\n//         <form onSubmit={this.handleSubmit}>\n//           <label htmlFor=\"new-todo\">\n//             What needs to be done?\n//           </label>\n//           <input\n//             id=\"new-todo\"\n//             onChange={this.handleChange}\n//             value={this.state.text}\n//           />\n//           <button>\n//             Add #{this.state.items.length + 1}\n//           </button>\n//         </form>\n//         <button\n//         onClick={gotoCalendar}\n//         >View Calendar</button>\n//       </div>\n//\n//     );\n//   }\n//\n//   handleChange(e) {\n//     this.setState({ text: e.target.value });\n//   }\n//\n//   handleSubmit(e) {\n//     e.preventDefault();\n//     if (this.state.text.length === 0) {\n//       return;\n//     }\n//     const itemsRef = firebase.database().ref('text');\n//     const newItem = {\n//       text: this.state.text,\n//       id: Date.now()\n//     };\n//     itemsRef.push(newItem);\n// //    this.setState(state => ({\n// //      items: state.items.concat(newItem),\n// //      text: ''\n// //    }));\n//\n//\n//\n//   }\n// }\n//\n// class TodoList extends React.Component {\n//   render() {\n//     return (\n//       <ul>\n//         {this.props.items.map(item => (\n//           <li key={item.id}>{item.text}</li>\n//         ))}\n//       </ul>\n//     );\n//   }\n// }\n//\n// ReactDOM.render(\n//   <TodoApp />,\n//   document.getElementById('root')\n// );\n\nfunction gotoCalendar() {\n  setTimeout(() => {\n    ReactDOM.render( /*#__PURE__*/React.createElement(DemoApp, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 3\n      }\n    }), //document.body.appendChild(document.createElement('root'))\n    document.getElementById('root'));\n  }, 1000);\n}","map":{"version":3,"sources":["/home/daniel/booked/Booked/src/index.js"],"names":["React","ReactDOM","firebase","DemoApp","BrowserRouter","Router","Switch","Route","Link","BasicExample","Calender","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","gotoCalendar","setTimeout","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP,C,CAEA;AACA;AACA;;AAEA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,OAAO,eAAP;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,YAAP,C,CAEA;;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,IAJF,QAKO,kBALP;AAOA,eAAe,SAASC,YAAT,GAAwB;AACrC,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAJF,CADF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,eAmBE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CAnBF,CADF,CADF;AAiCD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,QAAT,GAAoB;AAClB,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF;AAKD,C,CACD;;;AACA,IAAIC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,8BAFD;AAGXC,EAAAA,WAAW,EAAE,qCAHF;AAIXC,EAAAA,SAAS,EAAE,cAJA;AAKXC,EAAAA,aAAa,EAAE,0BALJ;AAMXC,EAAAA,iBAAiB,EAAE,aANR;AAOXC,EAAAA,KAAK,EAAE,0CAPI;AAQXC,EAAAA,aAAa,EAAE;AARJ,CAAb;AAWAjB,QAAQ,CAACkB,aAAT,CAAuBT,MAAvuB;AACvBC,EAAAA,UAAU,CAAC,MAAM;AAAGrB,IAAAA,QAAQ,CAACsB,MAAT,eAClB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADkB,EAElB;AACAC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAHkB;AAIhB,GAJM,EAIJ,IAJI,CAAV;AAKC","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n// import firebase from 'firebase/app';\n// import 'firebase/firestore';\n// import 'firebase/auth'\n\nimport * as firebase from 'firebase';\nimport 'firebase/auth';\n\nimport DemoApp from './DemoApp'\nimport './main.css'\n\n//start router code////////\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nexport default function BasicExample() {\n  return (\n    <Router>\n      <div>\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/calender\">Calender</Link>\n          </li>\n        </ul>\n\n        <hr />\n\n        {/*\n          A <Switch> looks through all its children <Route>\n          elements and renders the first one whose path\n          matches the current URL. Use a <Switch> any time\n          you have multiple routes, but you want only one\n          of them to render at a time\n        */}\n        <Switch>\n          <Route exact path=\"/\">\n            <TodoApp />\n          </Route>\n          <Route path=\"/calender\">\n            <DemoApp />\n          </Route>\n        </Switch>\n\n      </div>\n    </Router>\n  );\n}\n\n//test to see if we can put before initial databse\n// function Home() {\n//   return (\n//     <div>\n//       <h2>Home test</h2>\n//     </div>\n//   );\n// }\n\nfunction Calender() {\n  return (\n    <div>\n      <h2>Calender test</h2>\n    </div>\n  );\n}\n///////////end router test//////////////////\nvar config = {\n  apiKey: \"AIzaSyAbrPremBQusjYoKqKfTcVHwxuw-Q8ikHw\",\n  authDomain: \"booked-8586e.firebaseapp.com\",\n  databaseURL: \"https://booked-8586e.firebaseio.com\",\n  projectId: \"booked-8586e\",\n  storageBucket: \"booked-8586e.appspot.com\",\n  messagingSenderId: \"24720035765\",\n  appId: \"1:24720035765:web:3d57fd5c840b8100c353fc\",\n  measurementId: \"G-20QKEY7V1D\"\n};\n\nfirebase.initializeApp(config);\n\n// var provider = new firebase.auth.GoogleAuthProvider();\n// //var user = firebase.auth().currentUser;\n// var name, email;\n//\n//\n// firebase.auth().useDeviceLanguage();\n// firebase.auth().onAuthStateChanged(function(user){\n//\n// \tif(user != null){\n// \t\tname = user.displayName;\n// \t\temail = user.email;\n// \t\talert(name + ': ' + email);\n// \t}\n// \telse{\n// \t\talert('Working on Redirect for initial log in');\n// \t\tfirebase.auth.signinWithRedirect(provider);\n// \t\tfirebase.auth().getRedirectResult().then(function(result) {\n// \t\t\tif (result.credential) {\n// \t\t\t\t//This gives you a Google Access Token.\n// \t\t\t\t//var token = result.credential.accessToken;\n// \t\t\t}\n// \t\t\tuser = result.user;\n// \t\t}).catch(function(error) {\n// \t\t\t\t// Handle Errors here.\n// \t\t\t\tvar errorCode = error.code;\n// \t\t\t\tvar errorMessage = error.message;\n// \t\t\t\t// The email of the user's account used.\n// \t\t\t\tvar errorEmail = error.email;\n// \t\t\t\t// The firebase.auth.AuthCredential type that was used.\n// \t\t\t\tvar credential = error.credential;\n//\n// \t\t\t\t//Output line for error variables to silence unused var warnings\n// \t\t\t\talert(errorCode + errorMessage + errorEmail + credential);\n// \t\t});\n// \t}\n// });\n\n// class TodoApp extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { items: [], text: '' };\n//     this.handleChange = this.handleChange.bind(this);\n//     this.handleSubmit = this.handleSubmit.bind(this);\n//   }\n//\n//   componentDidMount() {\n//     const itemsRef = firebase.database().ref('text');\n//     itemsRef.on('value', (snapshot) => {\n//       let items = snapshot.val();\n//       let newState = [];\n//       for (let item in items) {\n//         newState.push({\n//           id: items[item].id,\n//           text: items[item].text,\n//         });\n//       }\n//       this.setState({\n//         items: newState\n//       });\n//     });\n//   }\n//\n//   render() {\n//     return (\n//       <div>\n//         <h3>TODO</h3>\n//         <TodoList items={this.state.items} />\n//         <form onSubmit={this.handleSubmit}>\n//           <label htmlFor=\"new-todo\">\n//             What needs to be done?\n//           </label>\n//           <input\n//             id=\"new-todo\"\n//             onChange={this.handleChange}\n//             value={this.state.text}\n//           />\n//           <button>\n//             Add #{this.state.items.length + 1}\n//           </button>\n//         </form>\n//         <button\n//         onClick={gotoCalendar}\n//         >View Calendar</button>\n//       </div>\n//\n//     );\n//   }\n//\n//   handleChange(e) {\n//     this.setState({ text: e.target.value });\n//   }\n//\n//   handleSubmit(e) {\n//     e.preventDefault();\n//     if (this.state.text.length === 0) {\n//       return;\n//     }\n//     const itemsRef = firebase.database().ref('text');\n//     const newItem = {\n//       text: this.state.text,\n//       id: Date.now()\n//     };\n//     itemsRef.push(newItem);\n// //    this.setState(state => ({\n// //      items: state.items.concat(newItem),\n// //      text: ''\n// //    }));\n//\n//\n//\n//   }\n// }\n//\n// class TodoList extends React.Component {\n//   render() {\n//     return (\n//       <ul>\n//         {this.props.items.map(item => (\n//           <li key={item.id}>{item.text}</li>\n//         ))}\n//       </ul>\n//     );\n//   }\n// }\n//\n// ReactDOM.render(\n//   <TodoApp />,\n//   document.getElementById('root')\n// );\n\nfunction gotoCalendar(){\nsetTimeout(() => {  ReactDOM.render(\n  <DemoApp />,\n  //document.body.appendChild(document.createElement('root'))\n  document.getElementById('root')\n); }, 1000);\n}\n"]},"metadata":{},"sourceType":"module"}